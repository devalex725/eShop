@page "/products/import"
@inject IProductsClient ProductsClient
@inject IDialogService DialogService

<AppPageTitle>Import Products</AppPageTitle>

<MudText Typo="Typo.h3" Align="Align.Center" Class="mb-12">Import Products</MudText>

<MudFileUpload T="IReadOnlyList<IBrowserFile>" Accept=".zip" OnFilesChanged="UploadImagesArchive" Hidden="false" Class="flex-1" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0"
                   @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass">
    <ButtonTemplate>       
        <MudPaper Height="300px" Outlined="true" Class="@DragClass">
            <MudText Typo="Typo.h6">Images Zip file</MudText>
            <MudText Typo="Typo.body1">@(imagesFile is null ? "Drag and drop files here or click" : imagesFile.Name)</MudText>
        </MudPaper>
    </ButtonTemplate>
</MudFileUpload>

<MudFileUpload T="IReadOnlyList<IBrowserFile>" Accept=".csv" OnFilesChanged="UploadCsvFile" Hidden="false" Class="flex-1" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0"
                   @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass">
    <ButtonTemplate>       
        <MudPaper Height="300px" Outlined="true" Class="@DragClass">
            <MudText Typo="Typo.h6">Products CSV file</MudText>
            <MudText Typo="Typo.body1">@(csvFile is null ? "Drag and drop files here or click" : csvFile.Name)</MudText>
        </MudPaper>
    </ButtonTemplate>
</MudFileUpload>

<MudButton OnClick="Upload" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Filled.CloudUpload" Class="mt-4" Disabled="@(!CanUpload)">
    Upload
</MudButton>

@code 
{
    private static string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10";
    private string DragClass = DefaultDragClass;

    IBrowserFile imagesFile;
    IBrowserFile csvFile;

    private async void UploadImagesArchive(InputFileChangeEventArgs e)
    {
        imagesFile = e.GetMultipleFiles().First();
    }

    private async void UploadCsvFile(InputFileChangeEventArgs e)
    {
        csvFile = e.GetMultipleFiles().First();
    }

    public bool CanUpload => (imagesFile is not null && csvFile is not null);

    private async void Upload()
    {
        await ProductsClient.UploadProductImagesAsync(new FileParameter(imagesFile.OpenReadStream(3 *
            1000000), imagesFile.Name));

        await ProductsClient.ImportProductsCsvAsync(new FileParameter(csvFile.OpenReadStream(3 *
            1000000), csvFile.Name));
    }

    private void SetDragClass()
    {
        DragClass = $"{DefaultDragClass} mud-border-primary";
    }

    private void ClearDragClass()
    {
        DragClass = DefaultDragClass;
    }
}