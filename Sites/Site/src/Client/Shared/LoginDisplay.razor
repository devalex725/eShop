@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject Site.Client.Authentication.IAuthenticationService AuthenticationService
@inject CartService CartService

<AuthorizeView>
    <Authorized>

    </Authorized>
    <Authorized>
        <div class="d-flex">
            <a class="menu-link me-3 text-decoration-none" href="user/profile"><i class="fa fa-user"></i></a>
            <button class="btn menu-link me-3 text-decoration-none" @onclick="BeginSignOut"><i class="fa fa-sign-out-alt" /> Log out</button>
        </div>
    </Authorized>
    <NotAuthorized>
        <a class="menu-link me-3 text-decoration-none" href="login"><i class="fa fa-sign-in-alt me-2" /> My account</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    async Task BeginSignOut()
    {
        var options = new ModalOptions()
        {
            Position = ModalPosition.Middle,
            HideCloseButton = true
        };

        var modalRef = Modal.Show<SignOutModal>("Sign out?", options);

        var result = await modalRef.Result;

        if (result.Cancelled)
            return;

        await AuthenticationService.Logout();
        await CartService.ReconnectAndReload();
        Navigation.NavigateTo("/");
    }
}