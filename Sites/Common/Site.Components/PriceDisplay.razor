@using System.Globalization 

<div @attributes="@AdditionalAttributes" style="color: #ca0000">
    @if (Price == 0)
    {
        <h5 style="display: inline-block; color: #ca0000; font-weight: 500; line-height: 0;">Free</h5>
    }
    else
    {
        @if (RegularPrice is null)
        {
            <h5 style="display: inline-block; font-weight: 500; line-height: 0;">@FormatPrice(Price, Currency)</h5>
        }
        else
        {
            <h5 style="display: inline-block; font-weight: 500; color: #ca0000; line-height: 0;">@FormatPrice(Price, Currency)</h5>
        }
    }

    @if (RegularPrice != null)
    {
        <h5 class="text-muted" style="display: inline-block; text-decoration: line-through; color: gray !important; margin-left: 10px; line-height: 0;">@FormatPrice(RegularPrice.GetValueOrDefault(), Currency)</h5>
    }
</div>

@code {
    [Parameter]
    public decimal Price { get; set; }

    [Parameter]
    public decimal? RegularPrice { get; set; }

    [Parameter]
    public Func<decimal, string, string> FormatPrice { get; set; } = (price, currency) => price.FormatCurrency(currency!);

    [Parameter]
    public string? Currency { get; set; }

    [Parameter]
    public bool Big { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> AdditionalAttributes { get; set; } = default!;
}