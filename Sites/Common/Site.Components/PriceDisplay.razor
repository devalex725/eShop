@using System.Globalization 

<div @attributes="@AdditionalAttributes">
    @if (Price == 0)
    {
        <h5 style="display: inline-block; color: red; font-weight: 500; line-height: 0;">Free</h5>
    }
    else
    {
        @if (CompareAtPrice is null)
        {
            <h5 style="display: inline-block; font-weight: 500; line-height: 0;">@FormatPrice(Price)</h5>
        }
        else
        {
            <h5 style="display: inline-block; font-weight: 500; color: red; line-height: 0;">@FormatPrice(Price)</h5>
        }
    }

    @if (CompareAtPrice != null)
    {
        <h5 class="text-muted" style="display: inline-block; text-decoration: line-through; color: gray !important; margin-left: 10px; line-height: 0;">@FormatPrice(CompareAtPrice.GetValueOrDefault())</h5>
    }
</div>

@code {
    [Parameter]
    public decimal Price { get; set; }

    [Parameter]
    public decimal? CompareAtPrice { get; set; }

    [Parameter]
    public Func<decimal, string> FormatPrice { get; set; } = (price) => price.ToString("c");

    [Parameter]
    public bool Big { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> AdditionalAttributes { get; set; } = default!;
}