@page "/user/profile"
@inject IUserClient UserClient

<SitePageTitle>Profile</SitePageTitle>

<div class="container">
    <h1>@userProfile?.FirstName @userProfile?.LastName</h1>
    <p role="status">@userProfile?.Ssn</p

    @if(ordersResult is not null) 
    {
        @if(!ordersResult.Items.Any()) 
        {
            <p>No orders</p>
        } 
        else 
        {
        <h2>Orders</h2>

    <div class="accordion" id="accordionExample">
        @{
            int i = 1;
        }
        @foreach (var order in ordersResult.Items)
        {
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingOne">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#@($"order-{i}")" aria-expanded="@(i == 1 ? "true" : "false")" aria-controls="@($"order-{i}")">
                            <strong class="me-3">
                                #@order.Id 
                            </strong>
                            <span class="me-3">
                                @order.Date.ToString("yyyy-MM-dd")
                            </span>
                            <span>
                                @order.Total.ToString("c")
                            </span>
                    </button>
                </h2>
                <div id="@($"order-{i}")" class="accordion-collapse collapse @(i == 1 ? "show" :string.Empty)" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <table class="table table-striped table-hover">
                            <thead>
                                <th>Description</th>
                                <th>Item Id</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>VAT Rate</th>
                                <th>Total</th>
                            </thead>
                            <tbody>
                                @foreach (var orderItem in order.Items)
                                {
                                    <tr>
                                        <td>@orderItem.Description</td>
                                        <td>@orderItem.ItemId</td>
                                        <td>@orderItem.Quantity @orderItem.Unit</td>
                                        <td>@orderItem.UnitPrice.ToString("c")</td>
                                        <td>@orderItem.VatRate</td>
                                        <td>@orderItem.Total.ToString("c")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            i++;
            }
        </div>
        }
    }
</div>

@code {
    UserProfileDto? userProfile;
    ItemsResultOfOrderDto? ordersResult;

    protected override async Task OnInitializedAsync()
    {
        try 
        {
            userProfile = await UserClient.GetProfileAsync();
            ordersResult = await UserClient.GetOrdersAsync(null, null);
        }
        catch(ApiException exc) when (exc.StatusCode == 401)
        {
            
        }
    }

/*
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            userProfile = await UserClient.GetProfileAsync();
            ordersResult = await UserClient.GetOrdersAsync(null, null);
        }
    }
    */
}