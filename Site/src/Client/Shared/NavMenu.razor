@using Microsoft.JSInterop
@inject IJSRuntime JS
@inject IItemsClient ItemsClient

<nav class="navbar navbar-expand-lg fixed-top navbar-dark bg-brand px-3">
    <div class="container">
        <NavLink class="navbar-brand mr-auto mr-lg-0" href="" Match=@NavLinkMatch.All>Joe's Place</NavLink>
        @*<img src="/images/profile.jpeg" alt="Profile Image" class="rounded-circle profile"
            style="margin-right: 10px; height: 32px;" /> *@
            
        <div>
            <a class="nav-link menu-link me-3 text-decoration-none text-uppercase d-inline-block d-lg-none" 
                href="basket" target="_blank">
                <CartNavItem DisableDropDown="true" SmallIcon="true" />
            </a>
        
            <button class="navbar-toggler p-0 border-0" type="button" data-toggle="offcanvas" @onclick="ToggleOpen">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>

        <div class="navbar-collapse offcanvas-collapse bg-brand @(isOpen ? "open" : null)" id="navbarsExampleDefault" @onclick="ToggleOpen">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <NavLink class="nav-link" href="" Match=@NavLinkMatch.All>Start</NavLink>
                </li>
                @*
                <li class="nav-item">
                    <NavLink class="nav-link" href="items">Items</NavLink>
                </li>
                *@

                @* <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="items" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Items
                    </a>
                    @if(itemGroups is not null) 
                    {
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            @foreach (var group in itemGroups)
                            {
                                <li><a class="dropdown-item" href="@($"categories/{group.Id}")">@group.Name</a></li>
                            }
                        </ul>
                    }
                </li> *@

                 @if(itemGroups is not null) 
                {
                    @foreach (var group in itemGroups)
                    {
                        <li class="nav-item">
                            <NavLink class="nav-link" href="@($"groups/{group.Id}")">@group.Name</NavLink>
                        </li>
                    }
                }
            </ul>
            <ol class="navbar-nav flex-row flex-wrap ms-md-auto list-inline list-unstyled" style="margin: 0;">
                @*
        <li class="nav-item list-inline-item">
            <a class="nav-link menu-link me-0 py-2 text-decoration-none text-uppercase"
                href="#" title="Twitter" target="_blank">
                <i class="fab fa-2x fa-facebook"></i>
            </a>
        </li>

        <li class="nav-item list-inline-item">
            <a class="nav-link menu-link me-0 py-2 text-decoration-none text-uppercase"
                href="#" target="_blank">
                <i class="fab fa-2x fa-youtube"></i>
            </a>
        </li>
                *@

                <li class="nav-item list-inline-item">
                    <LoginDisplay />
                </li>

                <li class="nav-item dropdown">
                    <CartNavItem />
                </li>
            </ol>
        </div>
    </div>
</nav>

@code {
    ICollection<ItemGroupDto>? itemGroups = null;
    bool isOpen = false;

    void ToggleOpen() => isOpen = !isOpen;

    protected override async Task OnInitializedAsync()
    {
        itemGroups = await ItemsClient.GetItemGroupsAsync(null, true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync(
                "initDropDown");
        }
    }
}