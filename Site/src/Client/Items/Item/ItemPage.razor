@page "/items/{id}"
@page "/items/{id}/{variantId}"
@implements IDisposable
@inject PersistentComponentState ApplicationState
@inject NavigationManager NavigationManager
@inject IItemsClient ItemsClient
@inject ICartsClient CartsClient
@inject IJSRuntime JS

<SitePageTitle>Item</SitePageTitle>

<article class="container">
    @if(item is not null) 
    {
        <SitePageTitle>@item.Name</SitePageTitle>

        <HeadContent>
            <meta name="description" content="@item.Description">
            <meta name="keywords" content="">
        </HeadContent>

        <div class="row">
            <div class="col-12 col-md-4 mb-4">
                <div class="card shadow-sm">
                    @if(item.Image is not null) 
                    {
                        <img class="bd-placeholder-img card-img-top" width="100%" height="225" src="@(variant?.Image ?? item.Image)" style="object-fit: contain;" />
                    }
                    else 
                    {
                        <svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Thumbnail" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c"></rect><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>
                    }
                </div>
            </div>

            <section class="col-12 col-md-8">
                <h1>@item.Name</h1>

                @*<p>@item.Id</p>*@

                <PriceDisplay Price="@(variant?.Price ?? item.Price)" CompareAtPrice="@item.CompareAtPrice" />

                @if(item.Available is not null) 
                {
                    <p class="text-muted mt-2">@item.Available available</p> 
                }

                <p class="mt-3">@item.Description</p>

                    <div class="d-flex justify-content-start mt-4 mb-2">
                        <div>
                            <InputQuantity MinValue="1" @bind-Value="quantity" />
                        </div>
                        
                        <div>
                            <button type="button" class="btn btn-outline-secondary ms-2 me-2" @onclick="AddItemToCart" @onclick:preventDefault><i class="fa fa-shopping-basket"></i> Add to basket</button>
                            @if (hasAddedToCart)
                            {
                                <a class="btn btn-primary fadeInRight" href="/checkout"><i class="fa fa-shopping-basket"></i> Check out</a>
                            }
                        </div>
                    </div>

                           @if (variants is not null)
                {
                    <div class="d-flex">
                            @foreach(var v in variants)
                            {
                                <div>
                                    <div class="card shadow-sm mt-4 me-2" @onclick="async () => await SelectVariant(v!)">
                                    @if ((v?.Image ?? item.Image) is not null)
                                    {
                                        <img src="@(v?.Image ?? item.Image)" width="100" height="100%" alt="Mony the dog"/>
                                    }
                                    else
                                    {
                                        <svg class="rounded-lg" width="100" height="100%" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Thumbnail" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c"></rect><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>
                                    }
                                    </div>
                                </div>
                            }  
                    </div>
                }


                @if(optionGroups.Any()) 
                {
                <div class="form">
                @foreach (var optionGroup in optionGroups)
                {
                    <h3 class="mt-4">@(optionGroup.Name ?? "Options")</h3>

                    @if(optionGroup.Max is not null) 
                    { 
                        <small class="text-muted">Max @optionGroup.Max</small>
                    }

                    @foreach (var itemOption in optionGroup.Options)
                    {
                        <div class="form-floating mb-3 mt-3">
                            @if(itemOption.OptionType == OptionType.YesOrNo) 
                            {
                                <div class="form-check">
                                    <InputCheckbox class="form-check-input" 
                                        Value="@itemOption.IsSelected" 
                                        ValueExpression="() => itemOption.IsSelected" 
                                        ValueChanged="async (v) => { itemOption.IsSelected = v; await UpdateUrl(); }" 
                                        id="flexCheckDefault" 
                                        disabled=@(!itemOption.IsSelected && optionGroup.Options.Count(x => x.IsSelected) >= optionGroup.Max) />

                                    <label class="form-check-label" for="flexCheckDefault">
                                        @itemOption.Name
                                        @if(itemOption.Price is not null) 
                                        { 
                                            <small class="text-muted ms-2">@itemOption.Price?.ToString("c")</small>
                                        }
                                    </label>
                                </div>
                            } 
                            else if(itemOption.OptionType == OptionType.Choice) 
                            {
                                <InputSelect TValue="string?" Value="@itemOption.SelectedValueId" ValueExpression="() => itemOption.SelectedValueId" ValueChanged="async (v) => { itemOption.SelectedValueId = v; await UpdateUrl(); }" class="form-select" aria-label="@itemOption.Name" placeholder="Choose option">
                                    @* <option selected>None</option> *@
                                    @foreach(var value in itemOption.Values!) 
                                    {
                                        <option value="@value.Id">
                                            @value.Name
                                            @if(value.Price is not null) 
                                            { 
                                                <small class="text-muted ms-2">@value.Price?.ToString("c")</small>
                                            }
                                        </option>
                                    }
                                </InputSelect>
                                <label for="exampleInputEmail1">
                                    @itemOption.Name 
                                </label>
                            }
                            else if(itemOption.OptionType == OptionType.NumericalValue) 
                            {           
                                <InputNumber 
                                    TValue="int?" 
                                    Value="@itemOption.NumericalValue" 
                                    ValueExpression="() => itemOption.NumericalValue" 
                                    ValueChanged="async (v) => { itemOption.NumericalValue = v; await UpdateUrl(); }" 
                                    type="number" 
                                    class="form-control" 
                                    id="exampleInputEmail1" 
                                    aria-describedby="emailHelp" 
                                    placeholder="Enter value" 
                                    min="@itemOption.MinNumericalValue" 
                                    step="1"
                                    max="@itemOption.MaxNumericalValue" />
                                <label for="exampleInputEmail1">@itemOption.Name</label>
                            }
                            else if(itemOption.OptionType == OptionType.TextValue) 
                            {           
                                <InputText 
                                    Value="@itemOption.TextValue" 
                                    ValueExpression="() => itemOption.TextValue" 
                                    ValueChanged="async (v) => { itemOption.TextValue = v; await UpdateUrl(); }" 
                                    type="text" 
                                    class="form-control" 
                                    id="exampleInputEmail1" 
                                    aria-describedby="emailHelp" 
                                    placeholder="Enter value" 
                                     />
                                <label for="exampleInputEmail1">@itemOption.Name</label>
                            }

                        </div>
                    }
                }
                </div>
                }


                @if(attributeGroups.Any()) 
{
                <div class="form">
                @foreach (var attributeGroup in attributeGroups)
                {
                    <h3 class="mt-4">@(attributeGroup.Name ?? "Attributes")</h3>

                    @foreach (var itemAttribute in attributeGroup.Attributes)
                    {
                        <div class="form-floating mb-3 mt-3">
                            
                                <InputSelect TValue="string?" Value="@itemAttribute.SelectedValueId" ValueExpression="() => itemAttribute.SelectedValueId" ValueChanged="async (v) => { itemAttribute.SelectedValueId = v; await Update(null!); }" class="form-select" aria-label="@itemAttribute.Name" placeholder="Choose option">
                                    @* <option selected>None</option> *@
                                    @foreach(var value in itemAttribute.Values!) 
                                    {
                                        <option value="@value.Id">
                                            @value.Name
                                        </option>
                                    }
                                </InputSelect>
                                <label for="exampleInputEmail1">
                                    @itemAttribute.Name 
                                </label>
                        </div>
                    }
                }
                </div>
}
            </section>
        </div>
    }
 </article>